//file:noinspection SpellCheckingInspection

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

// Expose package.json version to gradle
apply from: 'version.gradle'

buildscript {
    def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['adapty_kotlinVersion']

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'

        // noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def safeExtGet(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['adapty_' + name]
}

def safeExtGetInt(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['adapty_' + name]).toInteger()
}

android {
    compileSdkVersion safeExtGetInt('compileSdkVersion')
    buildToolsVersion safeExtGet('buildToolsVersion')

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion safeExtGetInt('minSdkVersion')
        targetSdkVersion safeExtGetInt('targetSdkVersion')
        versionCode 1
        versionName packageJsonVersion
        multiDexEnabled true
        buildConfigField 'String', 'VERSION_NAME', "\"$packageJsonVersion\""
    }

    lintOptions {
        abortOnError false
        disable 'GradleCompatible'
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            minifyEnabled false
        }

        // Only for library development
        libDebug {
            initWith buildTypes.debug
            versionNameSuffix "-lib-debug"
            repositories {
                google()
                // Adapty helper library
                maven { url "$rootDir/localMaven" }
                maven { url "$rootDir/internalMaven" }
                maven { url "$rootDir/../../node_modules/react-native/android" }
            }

            matchingFallbacks = ["debug"]
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

rootProject.allprojects {
    repositories {
        // Adapty helper library
        maven { url "$rootDir/../node_modules/react-native-adapty/lib/android/localMaven" }
    }
}

repositories {
    mavenCentral()
    google()
    maven { url "$rootDir/../node_modules/react-native/android" }
    // Adapty helper library
    maven { url "$rootDir/../node_modules/react-native-adapty/lib/android/localMaven" }
}

def getExtOrDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['adapty_' + name]
}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
    api 'io.adapty:android-sdk:2.11.5'

    //noinspection GradleDynamicVersion
    api 'io.adapty.internal:crossplatform:2.11.1'

    // Compatible with older and newer RN
    //noinspection GradleDynamicVersion
    implementation 'com.facebook.react:react-native:+'

    //noinspection DifferentStdlibGradleVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
