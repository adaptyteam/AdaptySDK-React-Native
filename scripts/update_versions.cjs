const fs = require('fs');
const path = require('path');

// Paths
const rootDir = path.join(__dirname, '..');
const packageJsonPath = path.join(rootDir, 'package.json');
const plistFilePath = path.join(
  rootDir,
  'lib',
  'ios',
  'CrossplatformVersion.plist',
);
const jsFilePath = path.join(rootDir, 'lib', 'src', 'version.ts');

// Get package version from package.json
const packageJson = require(packageJsonPath);
const packageVersion = packageJson.version;

// iOS
if (!fs.existsSync(plistFilePath)) {
  const plistContent = `
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>version</key>
  <string>${packageVersion}</string>
</dict>
</plist>
<!-- THIS FILE IS GENERATED BY /scripts/update_versions.sh SCRIPT. DO NOT EDIT MANUALLY -->
  `;
  fs.writeFileSync(plistFilePath, plistContent.trim());
} else {
  let plistContent = fs.readFileSync(plistFilePath, 'utf8');
  plistContent = plistContent.replace(
    /<key>version<\/key>\s*<string>.*<\/string>/,
    `<key>version</key>\n\t<string>${packageVersion}</string>`,
  );
  fs.writeFileSync(plistFilePath, plistContent);
  fs.appendFileSync(
    plistFilePath,
    '<!-- THIS FILE IS GENERATED BY /scripts/update_versions.sh SCRIPT. DO NOT EDIT MANUALLY -->\n',
  );
}
console.log(`${plistFilePath} --> ${packageVersion}`);

// JS
fs.writeFileSync(jsFilePath, `export default '${packageVersion}';\n`);
console.log(`${jsFilePath} --> ${packageVersion}`);
